def gradient_Pfa0_k12(k12, k23, k34, k21, k31, k41):
    return -(k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12**2*k23*k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)**2/(k12**3*k23**2*k34**2*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2)

def gradient_Pfa0_k23(k12, k23, k34, k21, k31, k41):
    return (k31*k41 + k34*k41)/(k12*k23*k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))) + ((k31*k41 + k34*k41)/(k23**2*k34) - (k31*k41 + k34*k41)/(k12*k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23**2*k34))*(k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2) - (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23**2*k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34)))

def gradient_Pfa0_k34(k12, k23, k34, k21, k31, k41):
    return (k21*k41 + k23*k41)/(k12*k23*k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)*(k41/k34**2 - k41/(k23*k34) + (k31*k41 + k34*k41)/(k23*k34**2) - (k21*k41 + k23*k41)/(k12*k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34**2))/(k12*k23*k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2) - (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34**2*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34)))

def gradient_Pfa0_k21(k12, k23, k34, k21, k31, k41):
    return (k31*k41 + k34*k41)/(k12*k23*k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))) - (k31*k41 + k34*k41)*(k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12**2*k23**2*k34**2*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2)

def gradient_Pfa0_k31(k12, k23, k34, k21, k31, k41):
    return (k21*k41 + k23*k41)/(k12*k23*k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))) + (-k41/(k23*k34) - (k21*k41 + k23*k41)/(k12*k23*k34))*(k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2)

def gradient_Pfa0_k41(k12, k23, k34, k21, k31, k41):
    return (-1/k34 - (k31 + k34)/(k23*k34) - (k21*k31 + k21*k34 + k23*k31 + k23*k34)/(k12*k23*k34))*(k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2) + (k21*k31 + k21*k34 + k23*k31 + k23*k34)/(k12*k23*k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34)))

def gradient_Pfa1_k12(k12, k23, k34, k21, k31, k41):
    return (k31*k41 + k34*k41)*(k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12**2*k23**2*k34**2*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2)

def gradient_Pfa1_k23(k12, k23, k34, k21, k31, k41):
    return (k31*k41 + k34*k41)*((k31*k41 + k34*k41)/(k23**2*k34) - (k31*k41 + k34*k41)/(k12*k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23**2*k34))/(k23*k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2) - (k31*k41 + k34*k41)/(k23**2*k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34)))

def gradient_Pfa1_k34(k12, k23, k34, k21, k31, k41):
    return k41/(k23*k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))) + (k31*k41 + k34*k41)*(k41/k34**2 - k41/(k23*k34) + (k31*k41 + k34*k41)/(k23*k34**2) - (k21*k41 + k23*k41)/(k12*k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34**2))/(k23*k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2) - (k31*k41 + k34*k41)/(k23*k34**2*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34)))

def gradient_Pfa1_k21(k12, k23, k34, k21, k31, k41):
    return -(k31*k41 + k34*k41)**2/(k12*k23**2*k34**2*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2)

def gradient_Pfa1_k31(k12, k23, k34, k21, k31, k41):
    return k41/(k23*k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))) + (k31*k41 + k34*k41)*(-k41/(k23*k34) - (k21*k41 + k23*k41)/(k12*k23*k34))/(k23*k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2)

def gradient_Pfa1_k41(k12, k23, k34, k21, k31, k41):
    return (k31 + k34)/(k23*k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))) + (k31*k41 + k34*k41)*(-1/k34 - (k31 + k34)/(k23*k34) - (k21*k31 + k21*k34 + k23*k31 + k23*k34)/(k12*k23*k34))/(k23*k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2)

def gradient_Pfa2_k12(k12, k23, k34, k21, k31, k41):
    return k41*(k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12**2*k23*k34**2*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2)

def gradient_Pfa2_k23(k12, k23, k34, k21, k31, k41):
    return k41*((k31*k41 + k34*k41)/(k23**2*k34) - (k31*k41 + k34*k41)/(k12*k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23**2*k34))/(k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2)

def gradient_Pfa2_k34(k12, k23, k34, k21, k31, k41):
    return k41*(k41/k34**2 - k41/(k23*k34) + (k31*k41 + k34*k41)/(k23*k34**2) - (k21*k41 + k23*k41)/(k12*k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34**2))/(k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2) - k41/(k34**2*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34)))

def gradient_Pfa2_k21(k12, k23, k34, k21, k31, k41):
    return -k41*(k31*k41 + k34*k41)/(k12*k23*k34**2*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2)

def gradient_Pfa2_k31(k12, k23, k34, k21, k31, k41):
    return k41*(-k41/(k23*k34) - (k21*k41 + k23*k41)/(k12*k23*k34))/(k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2)

def gradient_Pfa2_k41(k12, k23, k34, k21, k31, k41):
    return k41*(-1/k34 - (k31 + k34)/(k23*k34) - (k21*k31 + k21*k34 + k23*k31 + k23*k34)/(k12*k23*k34))/(k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2) + 1/(k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34)))

def gradient_Pfa3_k12(k12, k23, k34, k21, k31, k41):
    return (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12**2*k23*k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2)

def gradient_Pfa3_k23(k12, k23, k34, k21, k31, k41):
    return ((k31*k41 + k34*k41)/(k23**2*k34) - (k31*k41 + k34*k41)/(k12*k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23**2*k34))/(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2

def gradient_Pfa3_k34(k12, k23, k34, k21, k31, k41):
    return (k41/k34**2 - k41/(k23*k34) + (k31*k41 + k34*k41)/(k23*k34**2) - (k21*k41 + k23*k41)/(k12*k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34**2))/(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2

def gradient_Pfa3_k21(k12, k23, k34, k21, k31, k41):
    return -(k31*k41 + k34*k41)/(k12*k23*k34*(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2)

def gradient_Pfa3_k31(k12, k23, k34, k21, k31, k41):
    return (-k41/(k23*k34) - (k21*k41 + k23*k41)/(k12*k23*k34))/(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2

def gradient_Pfa3_k41(k12, k23, k34, k21, k31, k41):
    return (-1/k34 - (k31 + k34)/(k23*k34) - (k21*k31 + k21*k34 + k23*k31 + k23*k34)/(k12*k23*k34))/(1 + k41/k34 + (k31*k41 + k34*k41)/(k23*k34) + (k21*k31*k41 + k21*k34*k41 + k23*k31*k41 + k23*k34*k41)/(k12*k23*k34))**2

